import { z } from 'zod';
import { CouponType, DiscountType } from '../types';
export declare const CouponSchema: z.ZodEffects<z.ZodEffects<z.ZodObject<{
    id: z.ZodString;
    code: z.ZodString;
    name: z.ZodString;
    description: z.ZodOptional<z.ZodString>;
    type: z.ZodNativeEnum<typeof CouponType>;
    discountType: z.ZodNativeEnum<typeof DiscountType>;
    discountValue: z.ZodNumber;
    minPurchaseAmount: z.ZodOptional<z.ZodNumber>;
    maxDiscountAmount: z.ZodOptional<z.ZodNumber>;
    validFrom: z.ZodDate;
    validUntil: z.ZodDate;
    usageLimit: z.ZodOptional<z.ZodNumber>;
    usageCount: z.ZodDefault<z.ZodNumber>;
    usageLimitPerUser: z.ZodOptional<z.ZodNumber>;
    isActive: z.ZodDefault<z.ZodBoolean>;
    campaignId: z.ZodOptional<z.ZodString>;
    productIds: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    categoryIds: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    excludeProductIds: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    excludeCategoryIds: z.ZodOptional<z.ZodArray<z.ZodString, "many">>;
    metadata: z.ZodOptional<z.ZodRecord<z.ZodString, z.ZodAny>>;
    createdAt: z.ZodDate;
    updatedAt: z.ZodDate;
}, "strip", z.ZodTypeAny, {
    code: string;
    type: CouponType;
    id: string;
    createdAt: Date;
    updatedAt: Date;
    name: string;
    usageCount: number;
    validUntil: Date;
    discountType: DiscountType;
    discountValue: number;
    validFrom: Date;
    isActive: boolean;
    metadata?: Record<string, any> | undefined;
    description?: string | undefined;
    minPurchaseAmount?: number | undefined;
    maxDiscountAmount?: number | undefined;
    usageLimit?: number | undefined;
    usageLimitPerUser?: number | undefined;
    campaignId?: string | undefined;
    productIds?: string[] | undefined;
    categoryIds?: string[] | undefined;
    excludeProductIds?: string[] | undefined;
    excludeCategoryIds?: string[] | undefined;
}, {
    code: string;
    type: CouponType;
    id: string;
    createdAt: Date;
    updatedAt: Date;
    name: string;
    validUntil: Date;
    discountType: DiscountType;
    discountValue: number;
    validFrom: Date;
    metadata?: Record<string, any> | undefined;
    description?: string | undefined;
    usageCount?: number | undefined;
    minPurchaseAmount?: number | undefined;
    maxDiscountAmount?: number | undefined;
    usageLimit?: number | undefined;
    usageLimitPerUser?: number | undefined;
    isActive?: boolean | undefined;
    campaignId?: string | undefined;
    productIds?: string[] | undefined;
    categoryIds?: string[] | undefined;
    excludeProductIds?: string[] | undefined;
    excludeCategoryIds?: string[] | undefined;
}>, {
    code: string;
    type: CouponType;
    id: string;
    createdAt: Date;
    updatedAt: Date;
    name: string;
    usageCount: number;
    validUntil: Date;
    discountType: DiscountType;
    discountValue: number;
    validFrom: Date;
    isActive: boolean;
    metadata?: Record<string, any> | undefined;
    description?: string | undefined;
    minPurchaseAmount?: number | undefined;
    maxDiscountAmount?: number | undefined;
    usageLimit?: number | undefined;
    usageLimitPerUser?: number | undefined;
    campaignId?: string | undefined;
    productIds?: string[] | undefined;
    categoryIds?: string[] | undefined;
    excludeProductIds?: string[] | undefined;
    excludeCategoryIds?: string[] | undefined;
}, {
    code: string;
    type: CouponType;
    id: string;
    createdAt: Date;
    updatedAt: Date;
    name: string;
    validUntil: Date;
    discountType: DiscountType;
    discountValue: number;
    validFrom: Date;
    metadata?: Record<string, any> | undefined;
    description?: string | undefined;
    usageCount?: number | undefined;
    minPurchaseAmount?: number | undefined;
    maxDiscountAmount?: number | undefined;
    usageLimit?: number | undefined;
    usageLimitPerUser?: number | undefined;
    isActive?: boolean | undefined;
    campaignId?: string | undefined;
    productIds?: string[] | undefined;
    categoryIds?: string[] | undefined;
    excludeProductIds?: string[] | undefined;
    excludeCategoryIds?: string[] | undefined;
}>, {
    code: string;
    type: CouponType;
    id: string;
    createdAt: Date;
    updatedAt: Date;
    name: string;
    usageCount: number;
    validUntil: Date;
    discountType: DiscountType;
    discountValue: number;
    validFrom: Date;
    isActive: boolean;
    metadata?: Record<string, any> | undefined;
    description?: string | undefined;
    minPurchaseAmount?: number | undefined;
    maxDiscountAmount?: number | undefined;
    usageLimit?: number | undefined;
    usageLimitPerUser?: number | undefined;
    campaignId?: string | undefined;
    productIds?: string[] | undefined;
    categoryIds?: string[] | undefined;
    excludeProductIds?: string[] | undefined;
    excludeCategoryIds?: string[] | undefined;
}, {
    code: string;
    type: CouponType;
    id: string;
    createdAt: Date;
    updatedAt: Date;
    name: string;
    validUntil: Date;
    discountType: DiscountType;
    discountValue: number;
    validFrom: Date;
    metadata?: Record<string, any> | undefined;
    description?: string | undefined;
    usageCount?: number | undefined;
    minPurchaseAmount?: number | undefined;
    maxDiscountAmount?: number | undefined;
    usageLimit?: number | undefined;
    usageLimitPerUser?: number | undefined;
    isActive?: boolean | undefined;
    campaignId?: string | undefined;
    productIds?: string[] | undefined;
    categoryIds?: string[] | undefined;
    excludeProductIds?: string[] | undefined;
    excludeCategoryIds?: string[] | undefined;
}>;
export declare class CouponEntity {
    private data;
    constructor(data: z.infer<typeof CouponSchema>);
    get id(): string;
    get code(): string;
    get isValid(): boolean;
    get isExpired(): boolean;
    get hasReachedLimit(): boolean;
    get remainingUsage(): number | null;
    incrementUsage(): void;
    activate(): void;
    deactivate(): void;
    toJSON(): z.infer<typeof CouponSchema>;
    static fromJSON(data: unknown): CouponEntity;
}
//# sourceMappingURL=Coupon.d.ts.map