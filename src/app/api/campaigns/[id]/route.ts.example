import { NextRequest, NextResponse } from 'next/server'
import { prisma } from '@/lib/db/prisma'
import { withCache, cacheKeys, CACHE_TTL } from '@/lib/cache'

// 캠페인 상세 조회 - 캐싱 적용 예시
export const GET = withCache(
  async (request: NextRequest, { params }: { params: { id: string } }) => {
    try {
      const campaign = await prisma.campaign.findUnique({
        where: { id: params.id },
        include: {
          business: {
            select: {
              id: true,
              name: true,
              email: true,
              businessProfile: true
            }
          },
          applications: {
            include: {
              influencer: {
                select: {
                  id: true,
                  name: true,
                  email: true,
                  profile: true
                }
              }
            }
          },
          _count: {
            select: {
              applications: true
            }
          }
        }
      })

      if (!campaign) {
        return NextResponse.json(
          { error: 'Campaign not found' },
          { status: 404 }
        )
      }

      return NextResponse.json({
        success: true,
        campaign
      })

    } catch (error) {
      console.error('Campaign fetch error:', error)
      return NextResponse.json(
        { error: 'Failed to fetch campaign' },
        { status: 500 }
      )
    }
  },
  {
    key: (req) => {
      const id = req.url.split('/').pop() || ''
      return cacheKeys.campaign(id)
    },
    ttl: CACHE_TTL.MEDIUM,
    revalidate: 60
  }
)